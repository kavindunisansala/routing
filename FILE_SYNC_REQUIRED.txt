╔══════════════════════════════════════════════════════════════════╗
║              ⚠️  FILE SYNCHRONIZATION REQUIRED  ⚠️                ║
╚══════════════════════════════════════════════════════════════════╝

Your Linux build system has OLD versions of the fixed files!
You MUST copy the corrected files from Windows to Linux.

══════════════════════════════════════════════════════════════════
FILES TO COPY FROM WINDOWS TO LINUX
══════════════════════════════════════════════════════════════════

Source (Windows): d:\routing\
Destination (Linux): ~/Downloads/ns-allinone-3.35/ns-3.35/scratch/

FILES (copy ALL 3):
  1. routing.cc          ← Has 7 variable naming fixes + linker fix
  2. wormhole_attack.h   ← Has NS-3 API fixes
  3. wormhole_attack.cc  ← Has comparison fix + log component removed

══════════════════════════════════════════════════════════════════
HOW TO COPY FILES
══════════════════════════════════════════════════════════════════

Option 1: Using WinSCP or FileZilla (GUI)
  1. Connect to your Linux VM
  2. Navigate to d:\routing\ (local)
  3. Navigate to ~/Downloads/ns-allinone-3.35/ns-3.35/scratch/ (remote)
  4. Copy: routing.cc, wormhole_attack.h, wormhole_attack.cc
  5. Overwrite existing files

Option 2: Using SCP (Command Line from Windows PowerShell)
  scp d:\routing\routing.cc kanisa@<linux-ip>:~/Downloads/ns-allinone-3.35/ns-3.35/scratch/
  scp d:\routing\wormhole_attack.h kanisa@<linux-ip>:~/Downloads/ns-allinone-3.35/ns-3.35/scratch/
  scp d:\routing\wormhole_attack.cc kanisa@<linux-ip>:~/Downloads/ns-allinone-3.35/ns-3.35/scratch/

Option 3: Shared Folder (VirtualBox)
  1. Set up shared folder in VirtualBox
  2. Mount in Linux: sudo mount -t vboxsf <sharename> /mnt/share
  3. Copy: cp /mnt/share/routing/*.{cc,h} ~/Downloads/ns-allinone-3.35/ns-3.35/scratch/

Option 4: Copy-Paste (for small files)
  1. Open each file in Windows
  2. Copy content (Ctrl+A, Ctrl+C)
  3. Open file in Linux: nano ~/Downloads/ns-allinone-3.35/ns-3.35/scratch/routing.cc
  4. Paste and save (Ctrl+X, Y, Enter)
  5. Repeat for all 3 files

══════════════════════════════════════════════════════════════════
VERIFICATION CHECKLIST (After Copying)
══════════════════════════════════════════════════════════════════

On Linux, run these checks:

1. Check routing.cc has alias variables:
   grep "present_replay_attack_nodes" ~/Downloads/ns-allinone-3.35/ns-3.35/scratch/routing.cc
   → Should show: bool present_replay_attack_nodes = false;  // Alias

2. Check routing.cc includes wormhole_attack.cc:
   grep '#include "wormhole_attack.cc"' ~/Downloads/ns-allinone-3.35/ns-3.35/scratch/routing.cc
   → Should find the line

3. Check wormhole_attack.cc has NO NS_LOG_COMPONENT_DEFINE:
   grep "NS_LOG_COMPONENT_DEFINE" ~/Downloads/ns-allinone-3.35/ns-3.35/scratch/wormhole_attack.cc
   → Should return NOTHING (or commented line)

4. Check wormhole_attack.cc uses != operator:
   grep "m_peerAddress != Ipv4Address" ~/Downloads/ns-allinone-3.35/ns-3.35/scratch/wormhole_attack.cc
   → Should find: if (m_peerAddress != Ipv4Address::GetZero())

5. Check wormhole_attack.h has 6-parameter callback:
   grep "NetDevice::PacketType" ~/Downloads/ns-allinone-3.35/ns-3.35/scratch/wormhole_attack.h
   → Should find in ReceivePacket declaration

══════════════════════════════════════════════════════════════════
AFTER COPYING - BUILD COMMAND
══════════════════════════════════════════════════════════════════

cd ~/Downloads/ns-allinone-3.35/ns-3.35
./waf build

══════════════════════════════════════════════════════════════════
SUMMARY OF FIXES IN THESE FILES
══════════════════════════════════════════════════════════════════

routing.cc (15 lines changed):
  ✅ Lines 120-163: Added replay/reply alias variables (6 vars)
  ✅ Line 58: Added #include "wormhole_attack.cc"
  ✅ Lines 138584-138614: Fixed replay→reply in declare_attackers()
  ✅ Line 140910: Fixed replay→reply in main()
  ✅ Line 140912: Fixed parameter count (14→10)

wormhole_attack.h (3 lines changed):
  ✅ Lines 114-116: Fixed ReceivePacket signature (4→6 parameters)

wormhole_attack.cc (2 lines changed):
  ✅ Line 19: Removed NS_LOG_COMPONENT_DEFINE (log conflict)
  ✅ Line 83: Changed .IsEqual() to != operator

══════════════════════════════════════════════════════════════════

Total Errors Fixed: 21
  • 7 variable naming errors
  • 9 linker errors  
  • 3 NS-3 API errors
  • 1 applications module error
  • 1 log component conflict

══════════════════════════════════════════════════════════════════

Status: Ready to build after file sync! 🚀

══════════════════════════════════════════════════════════════════
